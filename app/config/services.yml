# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

imports:
    - { resource: '@EasyAdminUserBundle/Resources/config/services.yml' }

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{DataFixtures,Entity,Repository}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Action\:
        resource: '../../src/AppBundle/Action'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    # api_platform.rss.normalizer.item:
    AppBundle\Serializer\Rss\ItemNormalizer:
        public: false
        # class: AppBundle\Serializer\Rss\ItemNormalizer
        arguments:
            - '@api_platform.metadata.property.name_collection_factory'
            - '@api_platform.metadata.property.metadata_factory'
            - '@api_platform.iri_converter'
            - '@api_platform.resource_class_resolver'
            - '@api_platform.property_accessor'
            - '@?api_platform.name_converter'
            - '@?serializer.mapping.class_metadata_factory'
        tags: [serializer.normalizer]

    AppBundle\EventListener\IndexingListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    twig.stringloader:
        class: Twig_Extension_StringLoader
